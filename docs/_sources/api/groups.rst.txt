Basic group structures in RepLAB
================================

.. module:: +replab

The following classes provide basic structures for monoids/groups. The inheritance relationship is strictly linear
in the list below; and all objects below inherit from `.Str` and `.Domain`, and thus provide pretty printing infrastructure,
a `.Domain.eqv` equality test method, and a `.Domain.sample` method to generate a random element.

* `.Monoid`: structure with a binary associative operation, an identity element (property), and test for identity, along with their `.MonoidLaws`
* `.Group`: adds inverse elements, has associated `.GroupLaws`
* `.CompactGroup`: has an associated Haar measure
* `.FiniteGroup`: a group with a finite number of elements, is generated by a finite number of generators, has associated `.FiniteGroupLaws`, and can be decomposed in a cartesian product of sets to speed up averaging (`.FiniteGroupDecomposition`)
* `.NiceFiniteGroup`: describes a group with an injective homomorphism onto a permutation group; has laws `.NiceFiniteGroupLaws`, and provides infrastructure to construct subgroups `.NiceFiniteSubgroup`

Monoid
++++++

.. autoclass:: Monoid

MonoidLaws
++++++++++

.. autoclass:: MonoidLaws

Group
+++++

.. autoclass:: Group

GroupLaws
+++++++++

.. autoclass:: GroupLaws

CompactGroup
++++++++++++

.. autoclass:: CompactGroup

FiniteGroup
+++++++++++

.. autoclass:: FiniteGroup

FiniteGroupLaws
+++++++++++++++

.. autoclass:: FiniteGroupLaws

FiniteGroupDecomposition
++++++++++++++++++++++++

.. autoclass:: FiniteGroupDecomposition

NiceFiniteGroup
+++++++++++++++

.. autoclass:: NiceFiniteGroup

NiceFiniteGroupLaws
+++++++++++++++++++

.. autoclass:: NiceFiniteGroupLaws

NiceFiniteSubgroup
++++++++++++++++++

.. autoclass:: NiceFiniteSubgroup
